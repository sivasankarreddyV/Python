#duplicate velues not allowed
thisset = {"apple", "banana", "cherry", "apple"}

print(thisset)


#Get the Length of a Set
thisset = {"apple", "banana", "cherry"}
print(len(thisset))


#Set Items - Data Types
set1 = {"apple", "banana", "cherry"}
set2 = {1, 5, 7, 9, 3}
set3 = {True, False, False}

print(set1)
print(set2)
print(set3)


#type function
myset = {"apple", "banana", "cherry"}
print(type(myset))


#The set() Constructor
set = set(("apple", "banana", "cherry")) # note the double round-brackets
print(set)
print(type(set))


#access items
thisset = {"apple", "banana", "cherry"}
for x in thisset:
  print(x)

#another example
#True
set = {"apple", "banana", "cherry"}
print("banana" in set)


#False
thisset = {"apple", "banana", "cherry"}
print("banana" not in thisset)


#add items
thisset = {"apple", "banana", "cherry"}
thisset.add("orange")
print(thisset)


#add sets
s = {"apple", "banana", "cherry"}
t = {"pineapple", "mango", "papaya"}
s.update(t)
print(s)


#add any iterable
thisset = {"apple", "banana", "cherry"}
mylist = ["kiwi", "orange"]
thisset.update(mylist)
print(thisset)


#remove items
set = {"apple", "banana", "cherry"}
set.remove("banana")
print(set)


#discard method
set = {"apple", "banana", "cherry"}
set.discard("banana")
print(set)


#pop method
tset = {"apple", "banana", "cherry"}
x = thisset.pop()
print(x) #removed item
print(set) #the set after removal


#loop items
thisset = {"apple", "banana", "cherry"}
for x in thisset:
  print(x)


#union method
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set3 = set1.union(set2)
print(set3)

#union symbol
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set3 = set1 | (set2)
print(set3)


#Join Multiple Sets
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set3 = {"John", "Elena"}
set4 = {"apple", "bananas", "cherry"}
myset = set1.union(set2, set3, set4)
print(myset)


#Join Multiple Sets using union symbol
set1 = {"a", "b", "c"}
set2 = {1, 2, 3}
set3 = {"John", "Elena"}
set4 = {"apple", "bananas", "cherry"}
myset = set1 | set2 | set3 | set4
print(myset)


#Join a Set and a list
set1 = {"a", "b", "c"}
set2 = [1, 2, 3]
set3 = set1.union(set2)
print(set3)


#Join a Set and a Tuple
set1 = {"a", "b", "c"}
set2 = (1, 2, 3)
set3 = set1.union(set2)
print(set3)


#intersection method using set
set1 = {"apple", "banana", "cherry"}
set2 = {"google", "microsoft", "apple"}
set3 = set1.intersection(set2)
print(set3)


#use the & operator instead of the intersection method
set1 = {"apple", "banana", "cherry"}
set2 = {"google", "microsoft", "apple"}
set3 = set1 & (set2)
print(set3)


#True is 1
#False is 0
set1 = {"apple", 1, "banana", 0, "cherry"}
set2 = {False, "google", "microsoft", "apple", True}
set3 = set1.intersection(set2)
print(set3)


#difference method
set1 = {"apple", "banana" , "cherry"}
set2 = {"google", "microsoft", "apple"}
set3 = set1.difference(set2)
print(set3)

#diff method using - operator
set1 = {"apple", "banana" , "cherry"}
set2 = {"google", "microsoft", "apple"}
set3 = set1 - (set2)
print(set3)


#Symmetric Differences
set1 = {"apple", "banana" , "cherry"}
set2 = {"google", "microsoft", "apple"}
set3 = set1.symmetric_difference(set2)
print(set3)


#use the ^ operator instead of the symmetric_difference method
set1 = {"apple", "banana" , "cherry"}
set2 = {"google", "microsoft", "apple"}
set3 = set1 ^ (set2)
print(set3)


